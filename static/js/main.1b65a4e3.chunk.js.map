{"version":3,"sources":["const.js","deck.js","components/Card/index.js","components/Board/index.js","App.js","reportWebVitals.js","index.js"],"names":["CARD_TECHS","initializeDeck","level","id","cards_number","cards_list","slice","cards","forEach","name","push","array","_array","i","length","randomIndex","Math","floor","random","temp","shuffle","Card","handleClick","flipped","className","onClick","Board","flippedCards","style","map","card","includes","App","useState","setCards","setFlippedCards","resolvedCards","setResolvedCards","findCard","cardId","find","console","log","useEffect","evt","clickCardId","currentTarget","copyFlippedCards","filter","has_match","clickCard","matchCardId","hasMatch","flippedNoMatchCards","setTimeout","newFlippedCards","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b65a4e3.chunk.js","sourcesContent":["export const CARD_TECHS = [\n  'html5',\n  'css3',\n  'js',\n  'sass',\n  'nodejs',\n  'react',\n  'linkedin',\n  'heroku',\n  'github',\n  'aws'\n];","import { CARD_TECHS } from \"./const\";\n\nfunction shuffle(array) \n{\n  const _array = array.slice(0);\n  for(let i = 0; i < array.length -1 ; i++)\n  {\n    let randomIndex = Math.floor(Math.random() * (i + 1))\n    let temp = _array[i];\n    _array[i] = _array[randomIndex];\n    _array[randomIndex] = temp;\n  }\n\n  return _array\n}\n\nfunction initializeDeck(level) {\n    let id = 0;\n    const cards_number = level * 2;\n    const cards_list = CARD_TECHS.slice(0, cards_number);\n\n    let cards = [];\n\n    cards_list.forEach((name) => {\n        cards.push({\n            id: id++,\n            name\n          })\n        cards.push({\n            id: id++,\n            name\n        })\n    })\n    return shuffle(cards)\n\n}\n\nexport default initializeDeck","import './style.css';\n\nfunction Card ({id, name, handleClick, flipped}) {\n    return (\n        <div className={`card ${name} ${flipped ? 'card--flipped' : ''}` } data-tech=\"css3\" onClick = {handleClick} id={id}>\n            <div className=\"card__face card__face--front\"></div>\n            <div className=\"card__face card__face--back\"></div>\n        </div>\n    )\n}\n\nexport default Card;","import Card from \"../Card\";\nimport './style.css'\n\nfunction Board ({cards, handleClick, flippedCards}) {\n    return(\n        <div className=\"game-board\" style={{'gridTemplateColumns': '1fr 1fr'}}>\n            {\n                cards.map((card) => {\n                    return (\n                        <Card key={card.id} id={card.id} name = {card.name} handleClick={handleClick}  flipped={flippedCards.includes(card.id)}/>\n                    )\n                })\n            }\n        </div>\n    ) \n}\n\nexport default Board;","import { useEffect, useState} from 'react';\nimport './App.css';\nimport initializeDeck from './deck';\nimport Board from './components/Board';\n\nfunction App() {\n  const [level, setLevel] = useState(1);\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([])\n  const [resolvedCards, setResolvedCards] = useState([])\n  console.log(flippedCards);\n  console.log(resolvedCards)\n  function findCard(cardId) {\n    return cards.find(card => card.id === cardId)\n  }\n\n  function hasMatch (clickCardId) {\n    const clickCard = findCard(clickCardId);\n    let matchCardId = flippedCards.find(id => {\n          let card = findCard(id);\n          return id !== clickCardId && card.name === clickCard.name\n    });\n    if (matchCardId) {\n      return [clickCardId,matchCardId]\n    } else {\n      return []\n    }\n  } \n  function findFlippedNoMatchCards () {\n    return flippedCards.filter((id) =>  !resolvedCards.includes(id))\n  }\n\n  useEffect(() => {\n    setCards(initializeDeck(1))\n  },[])\n\n  const handleClick = (evt) => {\n    let clickCardId = +evt.currentTarget.id\n    console.log(clickCardId)\n \n    // debugger\n    if (!resolvedCards.includes(clickCardId)) {\n      \n      if (!flippedCards.includes(clickCardId)) {\n          let has_match = hasMatch(clickCardId);\n          if (has_match.length === 0) {\n            const flippedNoMatchCards = findFlippedNoMatchCards();\n            if (flippedNoMatchCards.length === 0) {\n              setFlippedCards([...flippedCards, clickCardId])\n\n            } else {\n              setFlippedCards([...flippedCards, clickCardId]);\n              setTimeout(() => {\n                const newFlippedCards = flippedCards.filter(cardId => cardId !== flippedNoMatchCards[0])\n                setFlippedCards(newFlippedCards)\n               \n              }, 1500);\n            }\n          } else {\n            setFlippedCards([...flippedCards, clickCardId]);\n            setResolvedCards([...resolvedCards, ...has_match])\n          }\n      } else {\n         const copyFlippedCards = flippedCards.filter(cardId => cardId !== clickCardId)\n        setFlippedCards(copyFlippedCards)\n      }\n\n    }\n\n\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Board cards= {cards} handleClick = {handleClick} flippedCards ={flippedCards}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}